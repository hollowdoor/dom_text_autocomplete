{"version":3,"file":"bundle.es.js","sources":["../src/lib/char_tree.js","../src/index.js"],"sourcesContent":["export default class CharTree {\n    constructor(){\n        this.tree = {branches: {}, items: []};\n    }\n    empty(){\n        this.tree = {branches: {}, items: []};\n    }\n    push(...datas){\n        datas.forEach(data=>{\n\n            let next = this.tree;\n            let list = data.split('');\n\n            list.forEach(ch=>{\n                let key = ch.toLowerCase();\n                next = (next.branches[key] = next.branches[key] || Object.create(null));\n                next.branches = next.branches || Object.create(null);\n                next.items = next.items || [];\n                next.items.push(data);\n                next.value = ch;\n            });\n\n            next.leaf = true;\n        });\n    }\n    remove(...datas){\n        datas.forEach(data=>{\n            let next = this.tree, last;\n            let list = data.split('');\n\n            for(let i=0; i<list.length; i++){\n                let char = list[i];\n                let key = char.toLowerCase();\n                let index;\n\n                last = next;\n                next = next.branches[key];\n\n                if(next === void 0) break;\n\n                if((index = next.items.indexOf(data.value)) !== -1){\n                    next.items.splice(index, 1);\n                    if(!next.items.length){\n                        delete last.branches[key];\n                    }else{\n                        next = next.branches[key];\n                    }\n                }\n\n            }\n        });\n    }\n    match(value){\n        let list = value.split('').map(v=>v.toLowerCase());\n\n        let next = this.tree,\n            len = list.length + 1,\n            last,\n            string = '';\n\n        if(!list.length) return {tree: null, string, value};\n\n        for(let i=0; i<len; i++){\n            last = next;\n            next = next.branches[list[i]];\n            if(!next){\n                if(list[i] !== void 0) last = null;\n                break;\n            }else{\n                string += next.value;\n            }\n        }\n\n        return {tree: last, string, value};\n    }\n    findAll(value){\n        let {tree} = this.match(value);\n        if(!tree) return [];\n        return [].concat(tree.items);\n    }\n    nextPhrase(value, sep){\n\n        let {tree, string} = this.match(value),\n            result = string;\n\n        sep = /[ ]+/;\n\n        const iter = (next)=>{\n\n            if(next.leaf){\n                return result;\n            }\n\n            let keys = Object.keys(next.branches);\n            for(let key in next.branches){\n                if(sep.test(key)){\n                    return result;\n                }\n                result += next.branches[key].value;\n                return iter(next.branches[key])\n\n            }\n        };\n\n        return iter(tree);\n    }\n}\n\nfunction lower(item){\n    return item.toLowerCase();\n}\n","import events from 'dom-eve';\nimport CharTree from './lib/char_tree.js';\n\nclass DOMTextAutocomplete {\n    constructor(input, {\n        read = null,\n        allowEntry = null,\n        entry = null,\n        render = null\n    }){\n        this.input = input;\n        this.searchable = new CharTree();\n        this._render = render;\n\n        const tracker = events.track();\n        events(input, tracker)\n        .on('keyup', event=>{\n            if(allowEntry){\n                if(!allowEntry(event)){\n                    return;\n                }\n            }\n            if(read){\n                Promise.resolve(read.call(this, event))\n                .then(()=>{\n                    entry.call(this, event);\n                });\n                return;\n            }\n            entry.call(this, event);\n        });\n    }\n    fill(parent){\n        let value = this.input.value;\n        let found = this.searchable.findAll(value);\n        parent.innerHTML = '';\n        found.forEach(data=>{\n            let html = this._render(data);\n            parent.insertAdjacentHTML(\n                'beforeend',\n                html\n            );\n        });\n        return !!found.length;\n    }\n    push(...values){\n        values.forEach(value=>{\n            this.searchable.push(value);\n        });\n        return this;\n    }\n    empty(){\n        this.searchable.empty();\n        return this;\n    }\n}\n\nexport default function autoComplete(input, options){\n    return new DOMTextAutocomplete(input, options);\n}\n"],"names":["this","let"],"mappings":"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"}